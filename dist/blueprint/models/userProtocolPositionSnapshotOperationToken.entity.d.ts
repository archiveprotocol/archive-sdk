import { UserProtocolPositionSnapshotOperation } from '../models';
import { TokenDirection, TokenTag, TokenType } from '../models';
import BigNumber from 'bignumber.js';
import { Relation } from 'typeorm';

export declare class UserProtocolPositionSnapshotOperationToken {
  id: number;
  tokenName: string;
  tokenAddress: string;
  tokenDirection: TokenDirection;
  tokenType: TokenType;
  tag: TokenTag;
  tokenRawAmount: string;
  decimals: number;
  totalAmountDeposited: BigNumber;
  totalAmountWithdrawn: BigNumber;
  tokenIncomeUsd: BigNumber;
  amountDepositedChange: BigNumber;
  amountWithdrawnChange: BigNumber;
  amountIncomeChange: BigNumber;
  tokenPriceUsd: BigNumber;
  tokenPriceSource: string;
  tokenAmountAtBlock: BigNumber;
  netTokenAmount: BigNumber;
  ifHeldAllAmountToken: BigNumber;
  ifHeldAmountToken: BigNumber;
  exitedIfHeldAmountToken: BigNumber;
  exitedIfHeldAllAmountToken: BigNumber;
  tokenValueUsd: BigNumber;
  isVirtualToken: boolean;
  cumulativeCollectedIncomeAmount: BigNumber;
  cumulativeCollectedIncomeUsd: BigNumber;
  exitedCumulativeCollectedIncomeAmount: BigNumber;
  exitedCumulativeCollectedIncomeUsd: BigNumber;
  baseTokenCostUsd: BigNumber;
  baseTokenPriceUsd: BigNumber;
  userProtocolPositionSnapshotOperation: Relation<UserProtocolPositionSnapshotOperation>;
  userProtocolPositionSnapshotOperationId: number;
  warning: object;
  createdAt: Date;
  updatedAt: Date;
}
